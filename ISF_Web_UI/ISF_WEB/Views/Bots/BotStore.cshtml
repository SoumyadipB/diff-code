@{
    /**/

    ViewBag.Title = "My Bot Requests";
}
@Scripts.Render("~/bundles/DataTableScript")

@Styles.Render("~/bundles/css/DataTableStyle")
@Styles.Render("~/bundles/css/select2")
@Scripts.Render("~/bundles/select2")
@Scripts.Render("~/bundles/DataTablesAdvancedScript")

@Scripts.Render("~/bundles/Admin")
<style>
    tfoot {
        display: table-header-group;
    }
</style>

<div class="container">
    <div class="page-header" align="center">
        <h2>WELCOME TO ISF BOT STORE</h2>
    </div>
    <div class="">
        <ul class="nav nav-pills">
            <li class="active"><a data-toggle="pill" href="#req">Request</a></li>
            <li><a data-toggle="pill" href="#dep" onclick="getDeployedBots()">Deployed</a></li>

        </ul>
    </div>
    <hr />
    <div class="tab-content">
        <div id="req" class="tab-pane fade in active">

            <div class="table-responsive" style="overflow-x: auto;">
                <table id="tbReqBody" class="table table-striped table-bordered table-hover" style="width:100%"></table>
            </div>
        </div>

        <div id="dep" class="tab-pane fade">

            <div class="table-responsive" style="overflow-x: auto;">
                <table id="tbDepBody" class="table table-striped table-bordered table-hover" style="width:100%"></table>

            </div>
        </div>

        <div id="requestInfo" class="modal" role="dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Request Information</h4>
                </div>
                <div class="modal-body" id="reqDesc"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" id="testBtnNewRequest" data-details="" class="btn btn-sm btn-warning testNewBotRequest" style="margin-left:10px" disabled>TEST BOT</button>
                    <button type="button" id="stopTestBtnBotRequest" data-details="" class="btn btn-sm btn-danger stopTestBtnBotRequest" style="margin-left:10px">STOP TEST-BOT</button>
                </div>
            </div>
        </div>

    </div>
</div>
@Scripts.Render("~/bundles/global")
@Scripts.Render("~/bundles/AdminBotStore")
@Scripts.Render("~/bundles/rappid")
@Scripts.Render("~/bundles/config")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/DataTableScript")

@Styles.Render("~/bundles/css/DataTableStyle")

@Scripts.Render("~/bundles/DataTablesAdvancedScript")

@Scripts.Render("~/bundles/Admin")
@Scripts.Render("~/bundles/bootstrap")



<script>

    $(document).ready(function () {
        getRequestDetails();
        var botRequestData; var assignRequestID; var versionNo; var authWindow = "";

        $('.testNewBotRequest').on('click', function () {


            if ($(this).attr('data-details') != '') {
                pwIsf.addLayer({ text: 'Please wait ...' });

                let jsonObj = JSON.parse($(this).attr('data-details'));
                let { reqId, signum } = jsonObj;

                let ajCall = $.isf.ajax({
                    url: service_java_URL + "botStore/createBotTestingRequest/" + reqId + "/" + signum,
                    contentType: 'application/json',
                    type: 'POST',
                    returnAjaxObj: true

                });

                ajCall.done(function (data) {
                    if (data.apiSuccess) {
                        pwIsf.alert({ msg: 'Testing will be initiated after providing input to ISF Popup. Please ensure ISF Desktop App is running', type: 'success' });
                        window.open('isfalert:test_' + reqId, '_self');
                    }
                    else {
                        pwIsf.alert({ msg: '' + data.responseMsg, type: 'warning' });
                    }

                });
                ajCall.fail(function () { pwIsf.alert({ msg: 'Error in BOT testing.', type: 'error' }); });
                ajCall.always(function () { pwIsf.removeLayer(); });

            } else {
                console.log('Error : Request id not received.');
            }


        });
        //END - TEST FOR NEW BOT



         $('.stopTestBtnBotRequest').on('click', function () {
             pwIsf.addLayer({ text: 'Please wait ...' });

              let jsonObj = JSON.parse($(this).attr('data-details'));
             let { reqId, signum } = jsonObj;


             let ajCall = $.isf.ajax({
                 url: service_java_URL + "botStore/stopInprogressBot/" + reqId + "/" + signum,
                            contentType: 'application/json',
                            type: 'POST',
                            returnAjaxObj: true
                        });

                        ajCall.done(function (data) {
                            if (data.apiSuccess) {
                                pwIsf.alert({ msg:''+ data.responseMsg, type: 'success' });
                                //window.open('isfalert:test_' + requestID, '_self');
                            } else {
                                pwIsf.alert({ msg: '' + data.responseMsg, type: 'warning' });
                            }
                        });

                        ajCall.fail(function () { pwIsf.alert({ msg: 'Error in BOT testing.', type: 'error' }); });
                        ajCall.always(function () { pwIsf.removeLayer(); });

                    });
    });

</script>
<style>
    header {
        background-color: #666;
        padding: 30px;
        text-align: center;
        font-size: 35px;
        color: white;
    }
</style>
