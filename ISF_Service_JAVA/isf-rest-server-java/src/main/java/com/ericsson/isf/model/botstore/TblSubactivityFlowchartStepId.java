package com.ericsson.isf.model.botstore;
// Generated Jul 24, 2018 11:07:24 AM by Hibernate Tools 4.3.1.Final

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * TblSubactivityFlowchartStepId generated by hbm2java
 */
@Embeddable
public class TblSubactivityFlowchartStepId implements java.io.Serializable {

	private int subActivityFlowChartStepId;
	private Integer subActivityFlowChartDefId;
	private String stepName;
	private String displayStepName;
	private String graphicalRepresentation;
	private String executionType;
	private String responsible;
	private String isTaskOrSubTask;
	private String taskOrParentTaskMapped;
	private Integer ordering;
	private String stepJson;

	public TblSubactivityFlowchartStepId() {
	}

	public TblSubactivityFlowchartStepId(int subActivityFlowChartStepId) {
		this.subActivityFlowChartStepId = subActivityFlowChartStepId;
	}

	public TblSubactivityFlowchartStepId(int subActivityFlowChartStepId, Integer subActivityFlowChartDefId,
			String stepName, String displayStepName, String graphicalRepresentation, String executionType,
			String responsible, String isTaskOrSubTask, String taskOrParentTaskMapped, Integer ordering,
			String stepJson) {
		this.subActivityFlowChartStepId = subActivityFlowChartStepId;
		this.subActivityFlowChartDefId = subActivityFlowChartDefId;
		this.stepName = stepName;
		this.displayStepName = displayStepName;
		this.graphicalRepresentation = graphicalRepresentation;
		this.executionType = executionType;
		this.responsible = responsible;
		this.isTaskOrSubTask = isTaskOrSubTask;
		this.taskOrParentTaskMapped = taskOrParentTaskMapped;
		this.ordering = ordering;
		this.stepJson = stepJson;
	}

	@Column(name = "SubActivityFlowChartStepID", nullable = false)
	public int getSubActivityFlowChartStepId() {
		return this.subActivityFlowChartStepId;
	}

	public void setSubActivityFlowChartStepId(int subActivityFlowChartStepId) {
		this.subActivityFlowChartStepId = subActivityFlowChartStepId;
	}

	@Column(name = "SubActivityFlowChartDefID")
	public Integer getSubActivityFlowChartDefId() {
		return this.subActivityFlowChartDefId;
	}

	public void setSubActivityFlowChartDefId(Integer subActivityFlowChartDefId) {
		this.subActivityFlowChartDefId = subActivityFlowChartDefId;
	}

	@Column(name = "StepName")
	public String getStepName() {
		return this.stepName;
	}

	public void setStepName(String stepName) {
		this.stepName = stepName;
	}

	@Column(name = "DisplayStepName")
	public String getDisplayStepName() {
		return this.displayStepName;
	}

	public void setDisplayStepName(String displayStepName) {
		this.displayStepName = displayStepName;
	}

	@Column(name = "GraphicalRepresentation")
	public String getGraphicalRepresentation() {
		return this.graphicalRepresentation;
	}

	public void setGraphicalRepresentation(String graphicalRepresentation) {
		this.graphicalRepresentation = graphicalRepresentation;
	}

	@Column(name = "ExecutionType")
	public String getExecutionType() {
		return this.executionType;
	}

	public void setExecutionType(String executionType) {
		this.executionType = executionType;
	}

	@Column(name = "Responsible")
	public String getResponsible() {
		return this.responsible;
	}

	public void setResponsible(String responsible) {
		this.responsible = responsible;
	}

	@Column(name = "IsTaskOrSubTask")
	public String getIsTaskOrSubTask() {
		return this.isTaskOrSubTask;
	}

	public void setIsTaskOrSubTask(String isTaskOrSubTask) {
		this.isTaskOrSubTask = isTaskOrSubTask;
	}

	@Column(name = "TaskOrParentTaskMapped")
	public String getTaskOrParentTaskMapped() {
		return this.taskOrParentTaskMapped;
	}

	public void setTaskOrParentTaskMapped(String taskOrParentTaskMapped) {
		this.taskOrParentTaskMapped = taskOrParentTaskMapped;
	}

	@Column(name = "Ordering")
	public Integer getOrdering() {
		return this.ordering;
	}

	public void setOrdering(Integer ordering) {
		this.ordering = ordering;
	}

	@Column(name = "StepJSON")
	public String getStepJson() {
		return this.stepJson;
	}

	public void setStepJson(String stepJson) {
		this.stepJson = stepJson;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof TblSubactivityFlowchartStepId))
			return false;
		TblSubactivityFlowchartStepId castOther = (TblSubactivityFlowchartStepId) other;

		return (this.getSubActivityFlowChartStepId() == castOther.getSubActivityFlowChartStepId())
				&& ((this.getSubActivityFlowChartDefId() == castOther.getSubActivityFlowChartDefId())
						|| (this.getSubActivityFlowChartDefId() != null
								&& castOther.getSubActivityFlowChartDefId() != null
								&& this.getSubActivityFlowChartDefId()
										.equals(castOther.getSubActivityFlowChartDefId())))
				&& ((this.getStepName() == castOther.getStepName()) || (this.getStepName() != null
						&& castOther.getStepName() != null && this.getStepName().equals(castOther.getStepName())))
				&& ((this.getDisplayStepName() == castOther.getDisplayStepName())
						|| (this.getDisplayStepName() != null && castOther.getDisplayStepName() != null
								&& this.getDisplayStepName().equals(castOther.getDisplayStepName())))
				&& ((this.getGraphicalRepresentation() == castOther.getGraphicalRepresentation())
						|| (this.getGraphicalRepresentation() != null && castOther.getGraphicalRepresentation() != null
								&& this.getGraphicalRepresentation().equals(castOther.getGraphicalRepresentation())))
				&& ((this.getExecutionType() == castOther.getExecutionType())
						|| (this.getExecutionType() != null && castOther.getExecutionType() != null
								&& this.getExecutionType().equals(castOther.getExecutionType())))
				&& ((this.getResponsible() == castOther.getResponsible())
						|| (this.getResponsible() != null && castOther.getResponsible() != null
								&& this.getResponsible().equals(castOther.getResponsible())))
				&& ((this.getIsTaskOrSubTask() == castOther.getIsTaskOrSubTask())
						|| (this.getIsTaskOrSubTask() != null && castOther.getIsTaskOrSubTask() != null
								&& this.getIsTaskOrSubTask().equals(castOther.getIsTaskOrSubTask())))
				&& ((this.getTaskOrParentTaskMapped() == castOther.getTaskOrParentTaskMapped())
						|| (this.getTaskOrParentTaskMapped() != null && castOther.getTaskOrParentTaskMapped() != null
								&& this.getTaskOrParentTaskMapped().equals(castOther.getTaskOrParentTaskMapped())))
				&& ((this.getOrdering() == castOther.getOrdering()) || (this.getOrdering() != null
						&& castOther.getOrdering() != null && this.getOrdering().equals(castOther.getOrdering())))
				&& ((this.getStepJson() == castOther.getStepJson()) || (this.getStepJson() != null
						&& castOther.getStepJson() != null && this.getStepJson().equals(castOther.getStepJson())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getSubActivityFlowChartStepId();
		result = 37 * result
				+ (getSubActivityFlowChartDefId() == null ? 0 : this.getSubActivityFlowChartDefId().hashCode());
		result = 37 * result + (getStepName() == null ? 0 : this.getStepName().hashCode());
		result = 37 * result + (getDisplayStepName() == null ? 0 : this.getDisplayStepName().hashCode());
		result = 37 * result
				+ (getGraphicalRepresentation() == null ? 0 : this.getGraphicalRepresentation().hashCode());
		result = 37 * result + (getExecutionType() == null ? 0 : this.getExecutionType().hashCode());
		result = 37 * result + (getResponsible() == null ? 0 : this.getResponsible().hashCode());
		result = 37 * result + (getIsTaskOrSubTask() == null ? 0 : this.getIsTaskOrSubTask().hashCode());
		result = 37 * result + (getTaskOrParentTaskMapped() == null ? 0 : this.getTaskOrParentTaskMapped().hashCode());
		result = 37 * result + (getOrdering() == null ? 0 : this.getOrdering().hashCode());
		result = 37 * result + (getStepJson() == null ? 0 : this.getStepJson().hashCode());
		return result;
	}

}
