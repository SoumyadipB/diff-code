package com.ericsson.isf.model.botstore;
// Generated Jul 24, 2018 11:07:24 AM by Hibernate Tools 4.3.1.Final

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.ericsson.isf.model.LanguageBaseVersionModel;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.fasterxml.jackson.annotation.JsonView;

/**
 * TblRpaDeployedBot generated by hbm2java
 */
@Entity
@Table(name = "TBL_RPA_DeployedBOT", schema = "transactionalData")
public class TblRpaDeployedBot implements java.io.Serializable {

	@JsonView(TblRpaDeployedBotView.Object.class)
	private int botid;

	private TblRpaRequest tblRpaRequest;

	@JsonView(TblRpaDeployedBotView.Object.class)
	private String botname;

	private int currentAvgExecutionTime;

	private int rpaexecutionTime;

	@JsonView(TblRpaDeployedBotView.Object.class)
	private String botlanguage;

	@JsonView(TblRpaDeployedBotView.Object.class)
	private String targetExecutionFileName;

	@JsonView(TblRpaDeployedBotView.Object.class)
	private String moduleClassName;

	@JsonView(TblRpaDeployedBotView.Object.class)
	private String moduleClassMethod;
	
	@JsonView(TblRpaDeployedBotView.Object.class)
	private String parallelWoexecution;
	
	private Integer reuseFactor;
	private Integer lineOfCode;
	private String status;
	private String createdBy;
	private Date createdOn;
	private String modifiedBy;
	private Date modifiedOn;
	private int isActive;
	private int isRunOnServer;
	private int isAuditPass;
	private Integer referenceBotId;
	@JsonView(TblRpaDeployedBotView.Object.class)
	private boolean isInputRequired;
	@JsonView(TblRpaDeployedBotView.Object.class)
	private Integer languageBaseVersionID;



	public TblRpaDeployedBot() {
	}
	
	

	public TblRpaDeployedBot(int botid, TblRpaRequest tblRpaRequest, String botname, int currentAvgExecutionTime,
			int rpaexecutionTime, String botlanguage, String targetExecutionFileName, String moduleClassName,
			String moduleClassMethod, String parallelWoexecution, String status, int isActive, int isRunOnServer,
			int isAuditPass, int referenceBotId, boolean isInputRequired , Integer LanguageBaseVersionID) {
		this.botid = botid;
		this.tblRpaRequest = tblRpaRequest;
		this.botname = botname;
		this.currentAvgExecutionTime = currentAvgExecutionTime;
		this.rpaexecutionTime = rpaexecutionTime;
		this.botlanguage = botlanguage;
		this.targetExecutionFileName = targetExecutionFileName;
		this.moduleClassName = moduleClassName;
		this.moduleClassMethod = moduleClassMethod;
		this.parallelWoexecution = parallelWoexecution;
		this.status = status;
		this.isActive = isActive;
		this.isRunOnServer = isRunOnServer;
		this.isAuditPass = isAuditPass;
		this.referenceBotId = referenceBotId;
		this.isInputRequired = isInputRequired;
		this.setLanguageBaseVersionID(LanguageBaseVersionID);
	}

	public TblRpaDeployedBot(int botid, TblRpaRequest tblRpaRequest, String botname, int currentAvgExecutionTime,
			int rpaexecutionTime, String botlanguage, String targetExecutionFileName, String moduleClassName,
			String moduleClassMethod, String parallelWoexecution, Integer reuseFactor, Integer lineOfCode,
			String status, String createdBy, Date createdOn, String modifiedBy, Date modifiedOn, int isActive,
			int isRunOnServer, int isAuditPass, int referenceBotId, boolean isInputRequired ,  Integer LanguageBaseVersionID) {
		this.botid = botid;
		this.tblRpaRequest = tblRpaRequest;
		this.botname = botname;
		this.currentAvgExecutionTime = currentAvgExecutionTime;
		this.rpaexecutionTime = rpaexecutionTime;
		this.botlanguage = botlanguage;
		this.targetExecutionFileName = targetExecutionFileName;
		this.moduleClassName = moduleClassName;
		this.moduleClassMethod = moduleClassMethod;
		this.parallelWoexecution = parallelWoexecution;
		this.reuseFactor = reuseFactor;
		this.lineOfCode = lineOfCode;
		this.status = status;
		this.createdBy = createdBy;
		this.createdOn = createdOn;
		this.modifiedBy = modifiedBy;
		this.modifiedOn = modifiedOn;
		this.isActive = isActive;
		this.isRunOnServer = isRunOnServer;
		this.isAuditPass = isAuditPass;
		this.referenceBotId = referenceBotId;
		this.isInputRequired = isInputRequired;
		this.setLanguageBaseVersionID(LanguageBaseVersionID);
			}

	@Id

	@Column(name = "BOTID", unique = true, nullable = false)
	public int getBotid() {
		return this.botid;
	}

	public void setBotid(int botid) {
		this.botid = botid;
	}

	@Column(name = "BOTName", nullable = false, length = 200)
	public String getBotname() {
		return this.botname;
	}

	public void setBotname(String botname) {
		this.botname = botname;
	}

	@Column(name = "CurrentAvgExecutionTime", nullable = false)
	public int getCurrentAvgExecutionTime() {
		return this.currentAvgExecutionTime;
	}

	public void setCurrentAvgExecutionTime(int currentAvgExecutionTime) {
		this.currentAvgExecutionTime = currentAvgExecutionTime;
	}

	@Column(name = "RPAExecutionTime", nullable = false)
	public int getRpaexecutionTime() {
		return this.rpaexecutionTime;
	}

	public void setRpaexecutionTime(int rpaexecutionTime) {
		this.rpaexecutionTime = rpaexecutionTime;
	}

	@Column(name = "BOTLanguage", nullable = false, length = 20)
	public String getBotlanguage() {
		return this.botlanguage;
	}

	public void setBotlanguage(String botlanguage) {
		this.botlanguage = botlanguage;
	}

	@Column(name = "TargetExecutionFileName", nullable = false, length = 200)
	public String getTargetExecutionFileName() {
		return this.targetExecutionFileName;
	}

	public void setTargetExecutionFileName(String targetExecutionFileName) {
		this.targetExecutionFileName = targetExecutionFileName;
	}

	@Column(name = "ModuleClassName", nullable = false, length = 100)
	public String getModuleClassName() {
		return this.moduleClassName;
	}

	public void setModuleClassName(String moduleClassName) {
		this.moduleClassName = moduleClassName;
	}

	@Column(name = "ModuleClassMethod", nullable = false, length = 100)
	public String getModuleClassMethod() {
		return this.moduleClassMethod;
	}

	public void setModuleClassMethod(String moduleClassMethod) {
		this.moduleClassMethod = moduleClassMethod;
	}

	@Column(name = "ParallelWOExecution", nullable = false, length = 5)
	public String getParallelWoexecution() {
		return this.parallelWoexecution;
	}

	public void setParallelWoexecution(String parallelWoexecution) {
		this.parallelWoexecution = parallelWoexecution;
	}

	@Column(name = "ReuseFactor")
	public Integer getReuseFactor() {
		return this.reuseFactor;
	}

	public void setReuseFactor(Integer reuseFactor) {
		this.reuseFactor = reuseFactor;
	}

	@Column(name = "LineOfCode")
	public Integer getLineOfCode() {
		return this.lineOfCode;
	}

	public void setLineOfCode(Integer lineOfCode) {
		this.lineOfCode = lineOfCode;
	}

	@Column(name = "Status", nullable = false, length = 20)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "CreatedBY", length = 10)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedOn", length = 23)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "ModifiedBy", length = 10)
	public String getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ModifiedOn", length = 23)
	public Date getModifiedOn() {
		return this.modifiedOn;
	}

	public void setModifiedOn(Date modifiedOn) {
		this.modifiedOn = modifiedOn;
	}

	@Column(name = "isActive", nullable = false)
	public int getIsActive() {
		return this.isActive;
	}

	public void setIsActive(int isActive) {
		this.isActive = isActive;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "rpaRequestID", referencedColumnName = "rpaRequestID")
	public TblRpaRequest getTblRpaRequest() {
		return tblRpaRequest;
	}

	public void setTblRpaRequest(TblRpaRequest tblRpaRequest) {
		this.tblRpaRequest = tblRpaRequest;
	}

	@Column(name = "isRunOnServer", nullable = false)
	public int getIsRunOnServer() {
		return this.isRunOnServer;
	}

	public void setIsRunOnServer(int isRunOnServer) {
		this.isRunOnServer = isRunOnServer;
	}

	@Column(name = "isAuditPass", nullable = false)
	public int getIsAuditPass() {
		return this.isAuditPass;
	}

	public void setIsAuditPass(int isAuditPass) {
		this.isAuditPass = isAuditPass;
	}

	@Column(name = "referenceBotId", nullable = true)
	public Integer getReferenceBotId() {
		return referenceBotId;
	}

	public void setReferenceBotId(Integer referenceBotId) {
		this.referenceBotId = referenceBotId;
	}

	@Column(name = "isInputRequired", nullable = false)
	public boolean getIsInputRequired() {
		return isInputRequired;
	}

	public void setIsInputRequired(boolean isInputRequired) {
		this.isInputRequired = isInputRequired;
	}


	@Column(name = "LanguageBaseVersionID")
	public Integer getLanguageBaseVersionID() {
		return languageBaseVersionID;
	}

	public void setLanguageBaseVersionID(Integer languageBaseVersionID) {
		this.languageBaseVersionID = languageBaseVersionID;
	}

}
